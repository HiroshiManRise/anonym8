Ce fichier décrit noip2, un client Linux de seconde génération pour le service de DNS dynamique de no-ip.com.

NOUVEAU:  Ce code se compilera et s'exécutera également sous 
          Solaris/Intel et les BSDs.
          Editez le Makefile pour Solaris et les différents BSDs.
          Pour les utilisateurs de BSD désirant utiliser une 
          interface tun, voir plus bas.
          Faites-moi savoir les autres modifications nécessaires pour 
          que noip2 fonctionne correctement sous votre OS non-Linux.

Veuillez lire ce court fichier avant d'utiliser noip2.

###########################################################################
COMMENT COMPILER UN EXECUTABLE POUR VOTRE SYSTEME

La commande
	make 
va produire l'exécutable du client noip2 qui fonctionnera sur votre système.

Si vous ne disposez pas de 'make' et que vous avez une machine Linux-i686 avec Libc6, il existe un exécutable pour les systèmes i686 appelé noip2-Linux dans le répertoire binaries. Copiez le dans le répertoire de construction.
  'cp binaries/noip2-Linux noip2'

La commande
	make install
(qui doit être exécutée en tant que root) installera les différents éléments aux endroits appropriés. Elle vous posera des questions et créera un fichier de données de configuration.
Voyez plus bas si vous ne pouvez être root ou écrire dans /usr/local/*.


###########################################################################
COMMENT UTILISER LE CLIENT SANS LIRE LE RESTANT DE CE TEXTE

Fonctionnement normal?
/usr/local/bin/noip2 -C			configure un client
/usr/local/bin/noip2			démarre un client
/usr/local/bin/noip2 -S			affiche des infos sur les clients en cours
/usr/local/bin/noip2 -D pid		active/désactive le débogage du client pid
/usr/local/bin/noip2 -K pid		arrête le client pid

Vous avez plus d'un dispositif d'accès à internet?
/usr/local/bin/noip2 -M -c file	démarre des clients supplémentaires

###########################################################################
COMMENT DEMARRER LE CLIENT

L'exécutable noip2 peut être lancé en tapant /usr/local/bin/noip2.

Si vous désirez qu'il démarre automatiquement à l'amorçage de la machine, placez le script suivant dans votre répertoire de démarrage. (/etc/init.d/
rcX.d ou /sbin/init.d/rcX.d ou ???)

	#######################################################
	#! /bin/sh
	# . /etc/rc.d/init.d/functions	# décommentez/modifiez vers killproc
	case "$1" in
	    start)
		echo "Démarrage de noip2."
		/usr/local/bin/noip2
	    ;;
	    stop)
		echo -n "Arrêt de noip2."
		killproc -TERM /usr/local/bin/noip2
	    ;;
	    *)
		echo "Usage: $0 {start|stop}"
		exit 1
	esac
	exit 0
	#######################################################

Où le 'X' de rcX.d est la valeur obtenue en exécutant la commande:
	grep initdefault /etc/inittab | awk -F: '{print $2}'

Killproc peut être téléchargé depuis ftp: //ftp.suse.com/pub/projects/init
Autrement, vous pouvez décommentez la ligne qui suit #! /bin/sh

Si vous avez une version récente de RedHat, vous voudrez peut être utiliser le script de démarrage fournit par un utilisateur. Il est fournit dans ce paquetage et s'appelle redhat.noip.sh.
Il peut nécessiter quelques modifications pour s'adapter à votre système.

Pour Debian il existe également un script de démarrage (debian.noip2.sh) fourni par un utilisateur. On dit qu'en certaines situations, il ne fonctionne pas.

Voici un script qui tuera toutes les copies de noip2 en cours d'exécution.
  #!/bin/sh
  for i in `noip2 -S 2>&1 | grep Process | awk '{print $2}' | tr -d ','`
  do
    noip2 -K $i
  done
Ces quatre lignes peuvent remplacer 'killproc' et 'stop_daemon' dans les autres scripts.

Si vous êtes derrière un pare-feu, vous devrez autoriser le port 8245 (TCP) dans les deux sens.
#######################################################################

IMPORTANT!!  Veillez à configurer correctement les permissions sur votre exécutable. Si vous démarrez noip2 avec une des méthodes ci-dessus, faites ceci:
chmod 700 /usr/local/bin/noip2
chown root:root /usr/local/bin/noip2
Si vous démarrez noip2 manuellement depuis un compte autre que root, remplacez le root: root du chown ci-dessus par LeCompte:SonGroupe, et éventuellement modifiez le chemin pour qu'il pointe sur l'exécutable.

###########################################################################
SAVED STATE ***************************************
ETAT ENREGISTRÉ ***********************************

Noip2 sauve la dernière adresse IP envoyée à no-ip.com quand il se termine. Elle sera relue au prochain démarrage de noip2. Pour que cela soit possible, le fichier de configuration doit être modifiable! Si ce n'est pas le cas, l'adresse de début 0.0.0.0 n'est pas modifiée.

###########################################################################
BSD USING A TUN DEVICE *********************************
BSD UTILISANT UN DISPOSITIF TUN ************************

Les systèmes BSD récents utilisent getifaddrs() pour lister TOUTES les interfaces. Décommentez ARCH=bsd_wth_getifaddrs dans le Makefile si vous utilisez une version de BSD qui supporte getifaddrs() et ignorez la suite de ce paragraphe.
Sinon, décommentez ARCH=bsd.
Le réglage 'bsd' ne listera pas les dispositifs tun dans BSD. Par conséquent un dispositif tun ne pourra pas être sélectionné dans le menu. Si vous voulez en utiliser un, vous devez éditer le Makefile et changer la ligne
	${BINDIR}/${TGT} -C -Y -c /tmp/no-ip2.conf
en
	${BINDIR}/${TGT} -C -Y -c /tmp/no-ip2.conf -I 'your tun device'

###########################################################################
PARAMETRES DE LIGNE DE COMMANDE A L'INVOCATION DU CLIENT

Le client se place tout seul à l'arrière plan et fonctionne comme un démon. Ce qui veut dire que si vous l'invoquez plusieurs fois en utilisant l'option usage-multiples, vous aurez plusieurs exemplaires en fonctionnement.

Si vous désirez que le client fonctionne une fois puis se termine, ajoutez le paramètre '-i Ipaddress'. Le client se comporte bien s'il est laissé actif en permanence, même sur des connexions intermittentes; il utilise très peu de ressources.

Le comportement du client est contrôlé par le fichier de données de configuration. Il est généralement situé en /usr/local/etc/no-ip2.conf, mais peut être placé n'importe où si le paramètre '-c /emplacement/du/fichier' est fourni sur la ligne de commande.

Les fichiers de configuration peuvent être générés avec le paramètre '-C'.

Il y a quelques nouveaux paramètres de ligne de commande liés aux valeurs par défaut du fichier de configuration. Ce sont -F, -Y et -U.

L'intervalle entre deux tests consécutifs de changement d'adresse IP est défini par le paramètre '-U nn'. La valeur représente des minutes, un minimum de 1 est imposé par le client quand il fonctionne sur la machine pare-feu, 5 quand il se trouve derrière un pare-feu/routeur. Une valeur courante pour les clients derrière un pare-feu est 30. Un jour se traduit par 1440, une semaine 10080, un mois 40320, 41760, 43200 ou 44640. L'heure est laissée en exercice pour le lecteur :-)

Le code qui créé la configuration permet de choisir parmi les hôtes/groupes enregistrés sur no-ip.com pour l'utilisateur sélectionné. Le paramètre '-Y' sélectionne tous les hôtes/groupes pour la mise à jour.

Certains sites ont plusieurs connexions à internet et déboussolent la détection NAT auto. Le paramètre '-F' impose le réglage non-NAT ou "pare-feu".

Le client peu être appelé avec le paramètre '-i AdresseIP' qui force la transmission de cette adresse à no-ip.com. Le client s'exécute puis se termine.

Le paramètre '-I' peut servir à passer outre le nom de dispositif inscrit dans le fichier de configuration ou pour imposer un nom lorsque le fichier de configuration est créé. Ne l'utilisez qu'en dernier recours SVP!

Le paramètre '-S' permet l'affichage des infos associées aux copies de noip2 en exécution. Si aucun noip2 ne s'exécute, il affiche le contenu du fichier de données de configuration qui est sélectionné. Il se termine ensuite.

Le paramètre '-K ID_processus' sert à mettre fin à un noip2 en cours d'exécution. La valeur ID_processus peut être obtenue grâce à noip2 -S.

Le paramètre '-M' permet de lancer plusieurs copies du client. Chacun doit avoir son propre fichier de configuration, et jusqu'à quatre copies peuvent tourner en même temps.

Tous les messages d'information et les erreurs sont stockées dans le syslog. Un changement d'adresse réussi à no-ip.com provoque toujours l'ajout d'une ligne au syslog. Le syslog est en général /var/log/messages.

Si le client a été compilé avec le support du débogage (le cas habituel), le paramètre '-d' active la sortie de débogage. Cela produit une trace du programme en cours d'exécution et devrait vous aider si vous avez du mal à établir une connexion à no-ip.com. Toutes les erreurs, les messages et les E/S dans les deux sens s'affichent sur stderr au lieu de syslog.
Le paramètre '-D pid', lui, active/désactive le débogage d'un client noip2 en exécution. Cela ne modifie pas l'endroit où se fait la sortie de ce processus; si elle allait au syslog, elle continuera.

Le dernier paramètre d'invocation est '-h'. Le client affiche l'écran d'aide ci-dessous puis se termine.

USAGE: noip2 [ -C [ -F][ -Y][ -U #min]][ -c file]
        [ -d][ -D pid][ -i addr][ -S][ -M][ -h]

Version Linux-2.x.x
Options: -C               create configuration data
         -F               force NAT off
         -Y               select all hosts/groups
         -U minutes       set update interval
         -c config_file   use alternate data path
         -d               increase debug verbosity
         -D processID     toggle debug flag for PID
         -i IPaddress     use supplied address
         -I interface     use supplied interface
         -S               show configuration data
         -M               permit multiple instances
         -K processID     terminate instance PID
         -h               help (this text)

###########################################################################
COMMENT CONFIGURER LE CLIENT

La commande
	noip2 -C
Va créer les données de configuration et les enregistrer dans le fichier /usr/local/etc/no-ip2.conf.

Si vous ne pouvez pas écrire dans /usr/local/* ou ne pouvez pas devenir root sur la machine où vous voulez exécuter noip2, vous devrez ajouter '-c nom_fichier_config' à chaque invocation du client, y compris pour la création du fichier de configuration. Vous devrez également probablement installer l'exécutable dans un endroit où vous pouvez écrire. Modifiez la ligne PREFIX= dans le fichier Makefile puis relancez make install pour éviter ces problèmes.

Vous devrez recréer le fichier de données à chaque fois que votre compte ou votre mot de passe change, ou lorsque vous ajoutez/supprimez des hôtes/groupes sur no-ip.com. Chaque appel de noip2 avec le paramètre '-C' détruira le fichier de données précédent.

Les autres options qui peuvent être utilisées ici comprennent '-F', '-Y', '-U'.

Le programme vous demandera si vous voulez exécuter un programme/script lors d'une mise à jour réussie sur no-ip.com. Si vous choisissez un script, faites le débuter par #!/bin/sh (ou le shell de votre choix) ou vous obtiendrez l'erreur 'Exec format error'. L'adresse IP qui vient d'être réglée avec succès est transmise au script/programme comme premier argument, et le nom de l'hôte/du groupe comme deuxième argument.

Certaines machines possèdent plusieurs connexions réseau. Dans ce cas, on vous demandera de sélectionner celle qui se connecte au monde extérieur. L'option '-I nom_interface' peut servir à sélectionner une interface qui n'est pas affichée. En général, ce sera une de ces interfaces pppx qui n'existent pas tant qu'elles ne sont pas actives.

Le programme vous demandera également le nom/e-mail qui sert d'identifiant pour le compte no-ip.com, et le mot de passe de ce même compte.

Les données de configuration ne sont pas modifiables à la main!!

IMPORTANT!!  Veillez à bien régler les permissions du fichier de configuration.
chmod 600 /usr/local/etc/no-ip2.conf.
chown root:root /usr/local/etc/no-ip2.conf.
Si vous démarrez noip2 manuellement depuis un compte autre que root, remplacez le root:root du chown ci-dessus par LeCompte:SonGroupe, et assurez-vous que le répertoire est accessible pour cet utilisateur!


Le programme abandonne ses privilèges root dès qu'il a lu le fichier des données de configuration.
###########################################################################

J'aimerais voir le texte de ce README.FIRST traduit en d'autres langues. Si vous pouvez le traduire depuis l'anglais en un autre langage, envoyez-moi la traduction s'il vous plait. Merci.

###########################################################################

Les bogues doivent être signalés à johna@onevista.com
  
Envoyez-moi un courriel si vous avez besoin d'aide, mais sachez que je filtre lourdement le spam. Si votre serveur de mail est bloqué, envoyez votre message en passant par le support de no-ip. N'envoyez pas de mail en HTML, personne ne le verra jamais.
 
Vous pouvez faire un fichier trace et y rechercher les messages d'erreur. Voici comment faire: 
Tapez:	 script noip2.out
Tapez:	 'votre ligne d'invocation de noip2 avec le paramètre -d ajouté'
Tapez:	 exit
Examinez le fichier noip2.out. Envoyez-le-moi si vous êtes toujours perdu.


		johna@onevista.com,  janvier 2004

Traduction Vincent Niarfeix


